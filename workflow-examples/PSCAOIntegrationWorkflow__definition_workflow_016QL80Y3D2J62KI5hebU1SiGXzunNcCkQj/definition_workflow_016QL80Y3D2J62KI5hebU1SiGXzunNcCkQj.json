{
  "workflow": {
    "unique_name": "definition_workflow_019GJ7B6M8HJA1Vy8t7g7uouVHJ4lBhErcN",
    "name": "PSC_AO_Integration_Workflow",
    "title": "PSC_AO_Integration_Workflow",
    "type": "generic.workflow",
    "base_type": "workflow",
    "variables": [
      {
        "schema_id": "datatype.boolean",
        "properties": {
          "value": false,
          "scope": "local",
          "name": "outputVarsExistInDestWorkflow",
          "type": "datatype.boolean",
          "is_required": false
        },
        "unique_name": "variable_workflow_019GJ7ESHPQER1qI3SsEnQnS9x5SK2Z5aHg",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "routeToPSC",
          "scope": "local",
          "name": "AmqpRoutingKey",
          "type": "datatype.string",
          "description": "Add the AMQP routing key here",
          "is_required": false
        },
        "unique_name": "variable_workflow_019GJ7ESHOU6I3rJG5hHI9g4PrhBOKgrBVN",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "local",
          "name": "DestRunOutputVars",
          "type": "datatype.string",
          "is_required": false
        },
        "unique_name": "variable_workflow_019GJ7ESHQ2OD0uxEwmsTulfR6pcGfBlEfC",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "local",
          "name": "PreviousOutputVariables",
          "type": "datatype.string",
          "is_required": false
        },
        "unique_name": "variable_workflow_019GJ7ESHOL933XUBM5La7CRmZjDXF9SB9F",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "tabletype_015ICF0I7NO0C6WGjQyRPrquxRAGOZZH89S",
        "properties": {
          "scope": "local",
          "name": "ActionIdsOfDestWorkflow",
          "type": "datatype.table",
          "is_required": false
        },
        "unique_name": "variable_workflow_019GJ7ESHPMAR5XrgikJvtRtUgBlWj0fXah",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "psc_inbound_exchange",
          "scope": "local",
          "name": "AOToPSCExchange",
          "type": "datatype.string",
          "is_required": false
        },
        "unique_name": "variable_workflow_019GJ7ESHPUFZ5xRKMqOlupEseiQwrAFao8",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "Running",
          "scope": "local",
          "name": "RunStatus",
          "type": "datatype.string",
          "is_required": false
        },
        "unique_name": "variable_workflow_019GJ7ESHPHEZ0WTC6ZgEDbSKMXgZ1KwYLm",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.integer",
        "properties": {
          "value": 1,
          "scope": "local",
          "name": "SleepTime",
          "type": "datatype.integer",
          "is_required": false
        },
        "unique_name": "variable_workflow_019GJ7ESHOCB60cjSEyFTekYMrLjMtJDOUx",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.boolean",
        "properties": {
          "value": true,
          "scope": "local",
          "name": "hasOutputVariables",
          "type": "datatype.boolean",
          "is_required": false
        },
        "unique_name": "variable_workflow_019GJ7ESHOYF03AQpnQXSKIQw0gisyzLHIJ",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "Bearer eyJraWQiOiIxIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJhdWQiOm51bGwsInN1YiI6IjkiLCJyb2xlcyI6WyJTVUlURV9VU0VSIiwiTEhfdGVuYW50X2FkbWluIl0sImlzcyI6InN1aXRlLWF1dGgiLCJ0ZW5hbnRJZCI6IjEiLCJleHAiOjE1NDU0MjA4MjgsImlhdCI6MTU0NTQxOTkxMywicm9sZXoiOlsiU1VJVEVfVVNFUiIsIkxIX3RlbmFudF9hZG1pbiJdfQ.Dt7KVqDo_FoydB1lNADKleko9OJ6thDOkjqDM5luJzcRMg5bNXPwI-oTa9mWAosO9yiDVMk92pbTVA27hOtRggTtC-9eRECQJfh_qcesNr_wvfMZseVidK734J_0R8WmsVufy4nqu3fvl2VHbCbcZH96Ap-f1r0y2Uzb5QZOucc",
          "scope": "local",
          "name": "AuthHeader",
          "type": "datatype.string",
          "is_required": false
        },
        "unique_name": "variable_workflow_019GJ7ESHOPXW4iCIBI1V89szrGONuDcKau",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "local",
          "name": "NSXMLOutput",
          "type": "datatype.string",
          "is_required": false
        },
        "unique_name": "variable_workflow_019GJ7ESHPYHO3zOWhQXV6HW7PBMrtKPlmb",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "<message channel-id=\"$CHANNEL_ID$\"><add-comments><comment>$COMMENT$\n$OUTPUT_VARIABLE$</comment></add-comments><take-action action=\"$STATUS$\"></take-action></message>",
          "scope": "local",
          "name": "NSXMLTemplate",
          "type": "datatype.string",
          "is_required": false
        },
        "unique_name": "variable_workflow_019GJ7ESHP2M55pps5DzFPGuJprZFQpZrsu",
        "object_type": "variable_workflow"
      }
    ],
    "properties": {
      "atomic": {
        "is_atomic": false
      },
      "delete_workflow_instance": false,
      "display_name": "PSC_AO_Integration_Workflow",
      "favorite": true,
      "runtime_user": {
        "override_target_runtime_user": false,
        "specify_on_workflow_start": false,
        "target_default": true
      },
      "target": {
        "execute_on_target_group": false,
        "execute_on_workflow_target": false,
        "no_target": true,
        "specify_on_workflow_start": false
      }
    },
    "object_type": "definition_workflow",
    "actions": [
      {
        "unique_name": "definition_activity_019GJ7F2TVKLF1N2g50YcrEZt91VBqI3XSA",
        "name": "JSONPath Query",
        "title": "JsonPath-Query -- Get input variables ",
        "type": "corejava.jsonpathquery",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "continue_on_failure": false,
          "description": "get input variables \nworkflow_id: Id of the target workflo to execute\nchannel_id: PSC identifier for request\nworkflow_payload: this is sent as the body of the API call to start target AO workflow\npoller_frequency: time interval for polling of target workflow status\n\nfrom payload (amqp request)",
          "display_name": "JsonPath-Query -- Get input variables ",
          "input_json": "$trigger.triggerevent_019NBO166L83Y3lEa28OjsbgLOyJLLy30NN.output.body$",
          "jsonpath_queries": [
            {
              "jsonpath_query": "$.workflow_id",
              "jsonpath_query_name": "WorkflowId",
              "jsonpath_query_type": "string",
              "zdate_type_format": ""
            },
            {
              "jsonpath_query": "$.channel_id",
              "jsonpath_query_name": "ChannelId",
              "jsonpath_query_type": "string",
              "zdate_type_format": ""
            },
            {
              "jsonpath_query": "$.workflow_payload",
              "jsonpath_query_name": "WorkflowPayload",
              "jsonpath_query_type": "string",
              "zdate_type_format": ""
            },
            {
              "jsonpath_query": "$.poller_frequency",
              "jsonpath_query_name": "PollerFrequency",
              "jsonpath_query_type": "integer",
              "zdate_type_format": ""
            }
          ],
          "skip_execution": false
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_019IAX2CTAG6N04YZQFBGmWPpLIrACdjjt3",
        "name": "Generic CCS API Request",
        "title": "Generic CCS API Request -- Trigger Child Workflow",
        "type": "ccs.api_request",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "api_body": "$activity.definition_activity_019GJ7F2TVKLF1N2g50YcrEZt91VBqI3XSA.output.jsonpath_queries.WorkflowPayload$",
          "api_call_method": "POST",
          "continue_on_failure": false,
          "display_name": "Generic CCS API Request -- Trigger Child Workflow",
          "relative_url": "/be-console/api/v1/workflows/start?workflow_id=$activity.definition_activity_019GJ7F2TVKLF1N2g50YcrEZt91VBqI3XSA.output.jsonpath_queries.WorkflowId$",
          "runtime_user": {
            "override_target_runtime_user": false,
            "target_default": true
          },
          "skip_execution": false,
          "target": {
            "override_workflow_target": true,
            "target_id": "definition_target_01f9IQgvQRJv3tvlqwR145Bbrye0toH0Q"
          }
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_019GJ7FSSLI5V0NjbkRPPaBJl3MsJdKRdph",
        "name": "JSONPath Query",
        "title": "Get runId of dest workflow from reponse",
        "type": "corejava.jsonpathquery",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "continue_on_failure": false,
          "description": "Get the runId of the target workflow once it has begun excution. This id to used to poll for the status of the target workflow",
          "display_name": "Get runId of dest workflow from reponse",
          "input_json": "$activity.definition_activity_019IAX2CTAG6N04YZQFBGmWPpLIrACdjjt3.output.response_body$",
          "jsonpath_queries": [
            {
              "jsonpath_query": "$[0].id",
              "jsonpath_query_name": "RunId",
              "jsonpath_query_type": "string",
              "zdate_type_format": ""
            }
          ],
          "skip_execution": false
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_019GJ7G55F8053ra8QnjzOACMgY7GBvJvh1",
        "name": "Replace String",
        "title": "Replace channelID,  started message ",
        "type": "core.replacestring",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "description": "Create a message to be sent to PSC indicating that the target workflow has begun execution",
          "display_name": "Replace channelID,  started message ",
          "input_string": "$workflow.definition_workflow_019GJ7B6M8HJA1Vy8t7g7uouVHJ4lBhErcN.local.variable_workflow_019GJ7ESHP2M55pps5DzFPGuJprZFQpZrsu$",
          "replace_list": [
            {
              "replaced_string": "$CHANNEL_ID$",
              "replacement_string": "$activity.definition_activity_019GJ7F2TVKLF1N2g50YcrEZt91VBqI3XSA.output.jsonpath_queries.ChannelId$"
            },
            {
              "replaced_string": "$COMMENT$",
              "replacement_string": "Workflow processing started"
            },
            {
              "replaced_string": "$OUTPUT_VARIABLE$",
              "replacement_string": ""
            },
            {
              "replaced_string": "$STATUS$",
              "replacement_string": "started"
            }
          ],
          "skip_execution": false
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_019GJ7GIXIO1O0cuwnM2HIdJdKXfeYxJSO0",
        "name": "Publish AMQP Message",
        "title": "Publish AMQP Message to PSC saying workflow started",
        "type": "amqp.publish_message",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "body": "$activity.definition_activity_019GJ7G55F8053ra8QnjzOACMgY7GBvJvh1.output.result_string$",
          "continue_on_failure": false,
          "delivery_mode": 1,
          "description": "Write to the queue PSC reads from that the target workflow has begun execution\n",
          "display_name": "Publish AMQP Message to PSC saying workflow started",
          "exchange_name": "$workflow.definition_workflow_019GJ7B6M8HJA1Vy8t7g7uouVHJ4lBhErcN.local.variable_workflow_019GJ7ESHPUFZ5xRKMqOlupEseiQwrAFao8$",
          "routing_key": "$workflow.definition_workflow_019GJ7B6M8HJA1Vy8t7g7uouVHJ4lBhErcN.local.variable_workflow_019GJ7ESHOU6I3rJG5hHI9g4PrhBOKgrBVN$",
          "runtime_user": {
            "override_target_runtime_user": false,
            "target_default": true
          },
          "skip_execution": false,
          "target": {
            "override_workflow_target": true,
            "target_id": ""
          }
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_019GJ7GXJ33GC2WF2fuSsbJIQ7BZARxhe1G",
        "name": "Generic CCS API Request",
        "title": "Generic CCS API Request - Get run details",
        "type": "ccs.api_request",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "api_call_method": "GET",
          "continue_on_failure": false,
          "description": "Get run details",
          "display_name": "Generic CCS API Request - Get run details",
          "relative_url": "/be-console/api/v1/instances/$activity.definition_activity_019GJ7FSSLI5V0NjbkRPPaBJl3MsJdKRdph.output.jsonpath_queries.RunId$",
          "runtime_user": {
            "override_target_runtime_user": false,
            "target_default": true
          },
          "skip_execution": false,
          "target": {
            "override_workflow_target": true,
            "target_id": "definition_target_01f9IQgvQRJv3tvlqwR145Bbrye0toH0Q"
          }
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_019GJ7HA4S3ND0SRZdvgv9IVV9se1HsZgBh",
        "name": "Check for output vars in workflow",
        "title": "Check for output vars in workflow",
        "type": "workflow.sub_workflow",
        "base_type": "subworkflow",
        "properties": {
          "continue_on_failure": false,
          "display_name": "Check for output vars in workflow",
          "input": {
            "variable_workflow_019GJ7CCSJMBK7Ug0mRRDhE3POMLfag2qn1": "$activity.definition_activity_019GJ7GXJ33GC2WF2fuSsbJIQ7BZARxhe1G.output.response_body$"
          },
          "runtime_user": {
            "target_default": true
          },
          "skip_execution": false,
          "target": {
            "no_target": true,
            "override_workflow_target": false
          },
          "workflow_id": "definition_workflow_019GJ7BW72PN41UOHCedQ4XyZAoOEIRIc0z"
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_019GJ7HH7HTMX6ApltkvclRBHQdesmDXGDY",
        "name": "While Loop",
        "title": "While Loop",
        "type": "logic.while",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "While Loop",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "blocks": [
          {
            "unique_name": "definition_activity_019GJ7HOC1YJI1T2Lc4OWA4MIq0PcC1YQER",
            "name": "Condition Branch",
            "title": "If workflow is not success or failed",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": {
                  "left_operand": "$workflow.definition_workflow_019GJ7B6M8HJA1Vy8t7g7uouVHJ4lBhErcN.local.variable_workflow_019GJ7ESHPHEZ0WTC6ZgEDbSKMXgZ1KwYLm$",
                  "operator": "ne",
                  "right_operand": "success"
                },
                "operator": "and",
                "right_operand": {
                  "left_operand": "$workflow.definition_workflow_019GJ7B6M8HJA1Vy8t7g7uouVHJ4lBhErcN.local.variable_workflow_019GJ7ESHPHEZ0WTC6ZgEDbSKMXgZ1KwYLm$",
                  "operator": "ne",
                  "right_operand": "failed"
                }
              },
              "continue_on_failure": false,
              "display_name": "If workflow is not success or failed",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_019GJ7HXR8VY86KnhXEaCbjQ4hrz5COhYGt",
                "name": "Sleep",
                "title": "Sleep",
                "type": "core.sleep",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "description": "Sleep for the time in between polls",
                  "display_name": "Sleep",
                  "skip_execution": false,
                  "sleep_interval": "$activity.definition_activity_019GJ7F2TVKLF1N2g50YcrEZt91VBqI3XSA.output.jsonpath_queries.PollerFrequency$"
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_019NCBEKD2D6Z2U9pXCMitYwqnh4YXzi2rs",
                "name": "Generic CCS API Request",
                "title": "Generic CCS API Request -- get run status",
                "type": "ccs.api_request",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "api_call_method": "GET",
                  "continue_on_failure": false,
                  "display_name": "Generic CCS API Request -- get run status",
                  "relative_url": "/be-console/api/v1/instances/$activity.definition_activity_019GJ7FSSLI5V0NjbkRPPaBJl3MsJdKRdph.output.jsonpath_queries.RunId$",
                  "runtime_user": {
                    "override_target_runtime_user": false,
                    "target_default": true
                  },
                  "skip_execution": false,
                  "target": {
                    "override_workflow_target": true,
                    "target_id": "definition_target_01f9IQgvQRJv3tvlqwR145Bbrye0toH0Q"
                  }
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_019GJ7IMPZO9B574ihNvHaMUzti2A3kZ3wj",
                "name": "JSONPath Query",
                "title": "Parse run status in poller",
                "type": "corejava.jsonpathquery",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "continue_on_failure": false,
                  "description": "Parse the response of the API call to get run status to extract the status",
                  "display_name": "Parse run status in poller",
                  "input_json": "$activity.definition_activity_019NCBEKD2D6Z2U9pXCMitYwqnh4YXzi2rs.output.response_body$",
                  "jsonpath_queries": [
                    {
                      "jsonpath_query": "$.status.state",
                      "jsonpath_query_name": "RunStatus",
                      "jsonpath_query_type": "string",
                      "zdate_type_format": ""
                    }
                  ],
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_019GJ7IX0WFE52fPQg9tSss8COyp8SZfj6M",
                "name": "Set Variables",
                "title": "Set RunStatusVariable in poller",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "description": "Set the variable with the current status. This variable will be used in the condition check for the next poll loop",
                  "display_name": "Set RunStatusVariable in poller",
                  "skip_execution": false,
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_019GJ7B6M8HJA1Vy8t7g7uouVHJ4lBhErcN.local.variable_workflow_019GJ7ESHPHEZ0WTC6ZgEDbSKMXgZ1KwYLm$",
                      "variable_value_new": "$activity.definition_activity_019GJ7IMPZO9B574ihNvHaMUzti2A3kZ3wj.output.jsonpath_queries.RunStatus$"
                    }
                  ]
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_019GJ7J4IWTS75WDiIDLvf7PVDlbwWpgd6d",
                "name": "Condition Block",
                "title": "get output vars only if they exist",
                "type": "logic.if_else",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "get output vars only if they exist",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "blocks": [
                  {
                    "unique_name": "definition_activity_019GJ7JAW3BHK0joOmnjIuTMUWiodKIMZA8",
                    "name": "Condition Branch",
                    "title": "Condition Branch: check for output variables existance",
                    "type": "logic.condition_block",
                    "base_type": "activity",
                    "properties": {
                      "condition": {
                        "left_operand": "$activity.definition_activity_019GJ7HA4S3ND0SRZdvgv9IVV9se1HsZgBh.output.variable_workflow_019GJ7CCSJW6O46f6Vwn4LEeYBYcqRracEp$",
                        "operator": "eq",
                        "right_operand": "true"
                      },
                      "continue_on_failure": false,
                      "display_name": "Condition Branch: check for output variables existance",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_019GJ7JLG9ROF7au0ViVNcCmwMHbnPlta8S",
                        "name": "JSONPath Query",
                        "title": "get run variable properties in poller",
                        "type": "corejava.jsonpathquery",
                        "base_type": "activity",
                        "properties": {
                          "action_timeout": 180,
                          "continue_on_failure": false,
                          "description": "Get the run variable properties in order to extract the value of output variables, if any, to send to PSC",
                          "display_name": "get run variable properties in poller",
                          "input_json": "$activity.definition_activity_019NCBEKD2D6Z2U9pXCMitYwqnh4YXzi2rs.output.response_body$",
                          "jsonpath_queries": [
                            {
                              "jsonpath_query": "$.variables[*].properties",
                              "jsonpath_query_name": "RunVariblesProperties",
                              "jsonpath_query_type": "string",
                              "zdate_type_format": ""
                            }
                          ],
                          "skip_execution": false
                        },
                        "object_type": "definition_activity"
                      },
                      {
                        "unique_name": "definition_activity_019GJ7JXU0ARX3hoedPVrCkGk6LHcYsFOJn",
                        "name": "JSONPath Query",
                        "title": "get run output variable values in poller",
                        "type": "corejava.jsonpathquery",
                        "base_type": "activity",
                        "properties": {
                          "action_timeout": 180,
                          "continue_on_failure": false,
                          "description": "Get the value of the output variables from the properties",
                          "display_name": "get run output variable values in poller",
                          "input_json": "$activity.definition_activity_019GJ7JLG9ROF7au0ViVNcCmwMHbnPlta8S.output.jsonpath_queries.RunVariblesProperties$",
                          "jsonpath_queries": [
                            {
                              "jsonpath_query": "$.[?(@.scope=='output')].value",
                              "jsonpath_query_name": "DestRunOutVarValues",
                              "jsonpath_query_type": "string",
                              "zdate_type_format": ""
                            }
                          ],
                          "skip_execution": false
                        },
                        "object_type": "definition_activity"
                      },
                      {
                        "unique_name": "definition_activity_019GJ7K7MDXG02pa21AhkoWUV94bdM1f470",
                        "name": "Set Variables",
                        "title": "Set DestRunOuputVars",
                        "type": "core.set_multiple_variables",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "display_name": "Set DestRunOuputVars",
                          "skip_execution": false,
                          "variables_to_update": [
                            {
                              "variable_to_update": "$workflow.definition_workflow_019GJ7B6M8HJA1Vy8t7g7uouVHJ4lBhErcN.local.variable_workflow_019GJ7ESHQ2OD0uxEwmsTulfR6pcGfBlEfC$",
                              "variable_value_new": "$activity.definition_activity_019GJ7JXU0ARX3hoedPVrCkGk6LHcYsFOJn.output.jsonpath_queries.DestRunOutVarValues$"
                            }
                          ]
                        },
                        "object_type": "definition_activity"
                      }
                    ]
                  }
                ]
              },
              {
                "unique_name": "definition_activity_019GJ7KFN0EG92sdGOoVzD8RZYQIOJGSeQn",
                "name": "Condition Block",
                "title": "Condition Block: check for output vars exist to publish message",
                "type": "logic.if_else",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "Condition Block: check for output vars exist to publish message",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "blocks": [
                  {
                    "unique_name": "definition_activity_019GJ7KOT9RNS1FG4LqlQyKlpD93Nug6RNK",
                    "name": "Condition Branch",
                    "title": "Condition Branch: output vars do not exist",
                    "type": "logic.condition_block",
                    "base_type": "activity",
                    "properties": {
                      "condition": {
                        "left_operand": "$activity.definition_activity_019GJ7HA4S3ND0SRZdvgv9IVV9se1HsZgBh.output.variable_workflow_019GJ7CCSJW6O46f6Vwn4LEeYBYcqRracEp$",
                        "operator": "eq",
                        "right_operand": "false"
                      },
                      "continue_on_failure": false,
                      "description": "If dest workflow has no output vars",
                      "display_name": "Condition Branch: output vars do not exist",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_019GJ7L06U5XY4t8i5AEOZkoFVXuNdeNvig",
                        "name": "Replace String",
                        "title": "Replace channelID,  ongoing message, output variable values",
                        "type": "core.replacestring",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "description": "Form the message to be sent to PSC with the output variables and status",
                          "display_name": "Replace channelID,  ongoing message, output variable values",
                          "input_string": "$workflow.definition_workflow_019GJ7B6M8HJA1Vy8t7g7uouVHJ4lBhErcN.local.variable_workflow_019GJ7ESHP2M55pps5DzFPGuJprZFQpZrsu$",
                          "replace_list": [
                            {
                              "replaced_string": "$CHANNEL_ID$",
                              "replacement_string": "$activity.definition_activity_019GJ7F2TVKLF1N2g50YcrEZt91VBqI3XSA.output.jsonpath_queries.ChannelId$"
                            },
                            {
                              "replaced_string": "$COMMENT$",
                              "replacement_string": "Workflow processing in progress"
                            },
                            {
                              "replaced_string": "$OUTPUT_VARIABLE$",
                              "replacement_string": ""
                            },
                            {
                              "replaced_string": "$STATUS$",
                              "replacement_string": "in progress"
                            }
                          ]
                        },
                        "object_type": "definition_activity"
                      },
                      {
                        "unique_name": "definition_activity_019GJ7LBQ0Q9O0RjrKmGxAFnuoSQd1V1rxt",
                        "name": "Publish AMQP Message",
                        "title": "Publish AMQP Message to PSC saying workflow started",
                        "type": "amqp.publish_message",
                        "base_type": "activity",
                        "properties": {
                          "action_timeout": 180,
                          "body": "$activity.definition_activity_019GJ7L06U5XY4t8i5AEOZkoFVXuNdeNvig.output.result_string$",
                          "continue_on_failure": false,
                          "delivery_mode": 1,
                          "description": "Write to the queue PSC reads from that the workflow process in ongoing along with the output variables, if any",
                          "display_name": "Publish AMQP Message to PSC saying workflow started",
                          "exchange_name": "$workflow.definition_workflow_019GJ7B6M8HJA1Vy8t7g7uouVHJ4lBhErcN.local.variable_workflow_019GJ7ESHPUFZ5xRKMqOlupEseiQwrAFao8$",
                          "routing_key": "$workflow.definition_workflow_019GJ7B6M8HJA1Vy8t7g7uouVHJ4lBhErcN.local.variable_workflow_019GJ7ESHOU6I3rJG5hHI9g4PrhBOKgrBVN$",
                          "runtime_user": {
                            "target_default": true
                          },
                          "skip_execution": false,
                          "target": {
                            "override_workflow_target": true,
                            "target_id": ""
                          }
                        },
                        "object_type": "definition_activity"
                      }
                    ]
                  },
                  {
                    "unique_name": "definition_activity_019GJ7LLEEZS80FJpxh4nNptdhe5nkilR1Z",
                    "name": "Condition Branch",
                    "title": "Condition Branch: output vars exist, and changed since last poll",
                    "type": "logic.condition_block",
                    "base_type": "activity",
                    "properties": {
                      "condition": {
                        "left_operand": "$workflow.definition_workflow_019GJ7B6M8HJA1Vy8t7g7uouVHJ4lBhErcN.local.variable_workflow_019GJ7ESHQ2OD0uxEwmsTulfR6pcGfBlEfC$",
                        "operator": "ne",
                        "right_operand": "$workflow.definition_workflow_019GJ7B6M8HJA1Vy8t7g7uouVHJ4lBhErcN.local.variable_workflow_019GJ7ESHOL933XUBM5La7CRmZjDXF9SB9F$"
                      },
                      "continue_on_failure": false,
                      "description": "Send ongoing message with output vars to PSC if the output variables have changed in the target workflow",
                      "display_name": "Condition Branch: output vars exist, and changed since last poll",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_019GJ7LSQ1V1V37QRP2iiGpeKWjZPMcHQvC",
                        "name": "Set Variables",
                        "title": "Set current output variable",
                        "type": "core.set_multiple_variables",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "description": "Set the current value of the output variables from the target workflow to a local variable, this value will be used in the next condition check ",
                          "display_name": "Set current output variable",
                          "variables_to_update": [
                            {
                              "variable_to_update": "$workflow.definition_workflow_019GJ7B6M8HJA1Vy8t7g7uouVHJ4lBhErcN.local.variable_workflow_019GJ7ESHOL933XUBM5La7CRmZjDXF9SB9F$",
                              "variable_value_new": "$workflow.definition_workflow_019GJ7B6M8HJA1Vy8t7g7uouVHJ4lBhErcN.local.variable_workflow_019GJ7ESHQ2OD0uxEwmsTulfR6pcGfBlEfC$"
                            }
                          ]
                        },
                        "object_type": "definition_activity"
                      },
                      {
                        "unique_name": "definition_activity_019GJ7M29MJCA4YuTJvsEloKUMmR6xaR5M9",
                        "name": "Replace String",
                        "title": "Replace channelID,  ongoing message, output variable values",
                        "type": "core.replacestring",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "description": "Form the message to be sent to PSC with the output variables and status",
                          "display_name": "Replace channelID,  ongoing message, output variable values",
                          "input_string": "$workflow.definition_workflow_019GJ7B6M8HJA1Vy8t7g7uouVHJ4lBhErcN.local.variable_workflow_019GJ7ESHP2M55pps5DzFPGuJprZFQpZrsu$",
                          "replace_list": [
                            {
                              "replaced_string": "$CHANNEL_ID$",
                              "replacement_string": "$activity.definition_activity_019GJ7F2TVKLF1N2g50YcrEZt91VBqI3XSA.output.jsonpath_queries.ChannelId$"
                            },
                            {
                              "replaced_string": "$COMMENT$",
                              "replacement_string": "Workflow processing in progress"
                            },
                            {
                              "replaced_string": "$OUTPUT_VARIABLE$",
                              "replacement_string": "output variables: $workflow.definition_workflow_019GJ7B6M8HJA1Vy8t7g7uouVHJ4lBhErcN.local.variable_workflow_019GJ7ESHOL933XUBM5La7CRmZjDXF9SB9F$"
                            },
                            {
                              "replaced_string": "$STATUS$",
                              "replacement_string": "in progress"
                            }
                          ]
                        },
                        "object_type": "definition_activity"
                      },
                      {
                        "unique_name": "definition_activity_019GJ7MF2EVQP0i7XlJXffh5Qe4OVfEGWXD",
                        "name": "Publish AMQP Message",
                        "title": "Publish AMQP Message to PSC saying workflow started",
                        "type": "amqp.publish_message",
                        "base_type": "activity",
                        "properties": {
                          "action_timeout": 180,
                          "body": "$activity.definition_activity_019GJ7M29MJCA4YuTJvsEloKUMmR6xaR5M9.output.result_string$",
                          "continue_on_failure": false,
                          "delivery_mode": 1,
                          "description": "Write to the queue PSC reads from that the workflow process in ongoing along with the output variables, if any",
                          "display_name": "Publish AMQP Message to PSC saying workflow started",
                          "exchange_name": "$workflow.definition_workflow_019GJ7B6M8HJA1Vy8t7g7uouVHJ4lBhErcN.local.variable_workflow_019GJ7ESHPUFZ5xRKMqOlupEseiQwrAFao8$",
                          "routing_key": "$workflow.definition_workflow_019GJ7B6M8HJA1Vy8t7g7uouVHJ4lBhErcN.local.variable_workflow_019GJ7ESHOU6I3rJG5hHI9g4PrhBOKgrBVN$",
                          "runtime_user": {
                            "target_default": true
                          },
                          "skip_execution": false,
                          "target": {
                            "override_workflow_target": true,
                            "target_id": ""
                          }
                        },
                        "object_type": "definition_activity"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "unique_name": "definition_activity_019GJ7MP6RVT06m9sgU44euyFfW65Y8tipK",
        "name": "Condition Block",
        "title": "Condition Block: check if output vars exist after done",
        "type": "logic.if_else",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "Condition Block: check if output vars exist after done",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "blocks": [
          {
            "unique_name": "definition_activity_019GJ7MWML2BO3Q21X27RxzOHqVZCKVHudv",
            "name": "Condition Branch",
            "title": "Condition Branch: check if op vars exists after done",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$activity.definition_activity_019GJ7HA4S3ND0SRZdvgv9IVV9se1HsZgBh.output.variable_workflow_019GJ7CCSJW6O46f6Vwn4LEeYBYcqRracEp$",
                "operator": "eq",
                "right_operand": "true"
              },
              "continue_on_failure": false,
              "display_name": "Condition Branch: check if op vars exists after done",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_019GJ7N7Z8YUF4e8lFrSyjXogMvRjR9BNRg",
                "name": "Generic CCS API Request",
                "title": "Generic CCS API Request - Get run details",
                "type": "ccs.api_request",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "api_call_method": "GET",
                  "continue_on_failure": false,
                  "description": "Get run details",
                  "display_name": "Generic CCS API Request - Get run details",
                  "relative_url": "/be-console/api/v1/instances/$activity.definition_activity_019GJ7FSSLI5V0NjbkRPPaBJl3MsJdKRdph.output.jsonpath_queries.RunId$?detailed=true",
                  "runtime_user": {
                    "override_target_runtime_user": false,
                    "target_default": true
                  },
                  "skip_execution": false,
                  "target": {
                    "override_workflow_target": true,
                    "target_id": "definition_target_01f9IQgvQRJv3tvlqwR145Bbrye0toH0Q"
                  }
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_019GJ7NJMJY4L6uohxYW5aNdDhXkBQ4Uye1",
                "name": "JSONPath Query",
                "title": "get run variable properties",
                "type": "corejava.jsonpathquery",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "continue_on_failure": false,
                  "description": "Parse API response to get variable properties from which to extract the output variables",
                  "display_name": "get run variable properties",
                  "input_json": "$activity.definition_activity_019GJ7N7Z8YUF4e8lFrSyjXogMvRjR9BNRg.output.response_body$",
                  "jsonpath_queries": [
                    {
                      "jsonpath_query": "$.variables[*].properties",
                      "jsonpath_query_name": "RunVariblesProperties",
                      "jsonpath_query_type": "string",
                      "zdate_type_format": ""
                    }
                  ],
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_019GJ7NUM6L9G0hi4T2YLDgkdHvzytTc6N0",
                "name": "JSONPath Query",
                "title": "get run output variable values",
                "type": "corejava.jsonpathquery",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "continue_on_failure": false,
                  "description": "get the final output variables",
                  "display_name": "get run output variable values",
                  "input_json": "$activity.definition_activity_019GJ7NJMJY4L6uohxYW5aNdDhXkBQ4Uye1.output.jsonpath_queries.RunVariblesProperties$",
                  "jsonpath_queries": [
                    {
                      "jsonpath_query": "$.[?(@.scope=='output')].value",
                      "jsonpath_query_name": "DestRunOutVarValues",
                      "jsonpath_query_type": "string",
                      "zdate_type_format": ""
                    }
                  ],
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_019GJ7O2LF1K718Tnzj6p1T7CC0Urms29rF",
                "name": "Set Variables",
                "title": "Set DestRunOutputVars",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "Set DestRunOutputVars",
                  "skip_execution": false,
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_019GJ7B6M8HJA1Vy8t7g7uouVHJ4lBhErcN.local.variable_workflow_019GJ7ESHQ2OD0uxEwmsTulfR6pcGfBlEfC$",
                      "variable_value_new": "$activity.definition_activity_019GJ7NUM6L9G0hi4T2YLDgkdHvzytTc6N0.output.jsonpath_queries.DestRunOutVarValues$"
                    }
                  ]
                },
                "object_type": "definition_activity"
              }
            ]
          }
        ]
      },
      {
        "unique_name": "definition_activity_019GJ7OD9ECHQ2TGcgnwXREidNRmTPekrdL",
        "name": "Replace String",
        "title": "Replace channelID and output vars in NSXML",
        "type": "core.replacestring",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "description": "Process the final response to be sent to PSC",
          "display_name": "Replace channelID and output vars in NSXML",
          "input_string": "$workflow.definition_workflow_019GJ7B6M8HJA1Vy8t7g7uouVHJ4lBhErcN.local.variable_workflow_019GJ7ESHP2M55pps5DzFPGuJprZFQpZrsu$",
          "replace_list": [
            {
              "replaced_string": "$CHANNEL_ID$",
              "replacement_string": "$activity.definition_activity_019GJ7F2TVKLF1N2g50YcrEZt91VBqI3XSA.output.jsonpath_queries.ChannelId$"
            },
            {
              "replaced_string": "$OUTPUT_VARIABLE$",
              "replacement_string": "output variables:$workflow.definition_workflow_019GJ7B6M8HJA1Vy8t7g7uouVHJ4lBhErcN.local.variable_workflow_019GJ7ESHQ2OD0uxEwmsTulfR6pcGfBlEfC$"
            }
          ]
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_019GJ7OLU3M0O2WXy86Jyo0dTPh2VjWg6sR",
        "name": "Condition Block",
        "title": "Condition Block: check for failed/success",
        "type": "logic.if_else",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "description": "The status in the response change based on with the workflow completed successfully or failed",
          "display_name": "Condition Block: check for failed/success",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "blocks": [
          {
            "unique_name": "definition_activity_019GJ7ORROK8L38E5YxxPh73CnhxmpnePTV",
            "name": "Condition Branch",
            "title": "Workflow Success branch",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$workflow.definition_workflow_019GJ7B6M8HJA1Vy8t7g7uouVHJ4lBhErcN.local.variable_workflow_019GJ7ESHPHEZ0WTC6ZgEDbSKMXgZ1KwYLm$",
                "operator": "eq",
                "right_operand": "success"
              },
              "continue_on_failure": false,
              "display_name": "Workflow Success branch"
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_019GJ7P1OIBLF1wqtRixUeGmVOEVf1qr6IN",
                "name": "Replace String",
                "title": "Replace comment and status for success",
                "type": "core.replacestring",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "Replace comment and status for success",
                  "input_string": "$activity.definition_activity_019GJ7OD9ECHQ2TGcgnwXREidNRmTPekrdL.output.result_string$",
                  "replace_list": [
                    {
                      "replaced_string": "$COMMENT$",
                      "replacement_string": "Workflow completed successfully"
                    },
                    {
                      "replaced_string": "$STATUS$",
                      "replacement_string": "done"
                    }
                  ]
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_019GJ7PAYVB5Z0tHKCfEwnORbupdKRIjTn8",
                "name": "Set Variables",
                "title": "Set NSXML output success",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "Set NSXML output success",
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_019GJ7B6M8HJA1Vy8t7g7uouVHJ4lBhErcN.local.variable_workflow_019GJ7ESHPYHO3zOWhQXV6HW7PBMrtKPlmb$",
                      "variable_value_new": "$activity.definition_activity_019GJ7P1OIBLF1wqtRixUeGmVOEVf1qr6IN.output.result_string$"
                    }
                  ]
                },
                "object_type": "definition_activity"
              }
            ]
          },
          {
            "unique_name": "definition_activity_019GJ7PIV7LA25eq086pxoRCufSi86tHXKn",
            "name": "Condition Branch",
            "title": "Workflow failed branch",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$workflow.definition_workflow_019GJ7B6M8HJA1Vy8t7g7uouVHJ4lBhErcN.local.variable_workflow_019GJ7ESHPHEZ0WTC6ZgEDbSKMXgZ1KwYLm$",
                "operator": "eq",
                "right_operand": "failed"
              },
              "continue_on_failure": false,
              "display_name": "Workflow failed branch"
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_019GJ7PSOIHFZ5YIogZjROOkw9Vu9dtAQ2L",
                "name": "Replace String",
                "title": "Replace comment and status for failure",
                "type": "core.replacestring",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "Replace comment and status for failure",
                  "input_string": "$activity.definition_activity_019GJ7OD9ECHQ2TGcgnwXREidNRmTPekrdL.output.result_string$",
                  "replace_list": [
                    {
                      "replaced_string": "$COMMENT$",
                      "replacement_string": "Workflow failed to complete"
                    },
                    {
                      "replaced_string": "$STATUS$",
                      "replacement_string": "done"
                    }
                  ]
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_019GJ7Q0VK7D22UXkTOJv7w8HlhRoyMy8As",
                "name": "Set Variables",
                "title": "Set NSXML output failure ",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "Set NSXML output failure ",
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_019GJ7B6M8HJA1Vy8t7g7uouVHJ4lBhErcN.local.variable_workflow_019GJ7ESHPYHO3zOWhQXV6HW7PBMrtKPlmb$",
                      "variable_value_new": "$activity.definition_activity_019GJ7PSOIHFZ5YIogZjROOkw9Vu9dtAQ2L.output.result_string$"
                    }
                  ]
                },
                "object_type": "definition_activity"
              }
            ]
          }
        ]
      },
      {
        "unique_name": "definition_activity_019GJ7QC1A5SL47f4j1tzNWH9Wds5wWx27x",
        "name": "Publish AMQP Message",
        "title": "Publish AMQP Message to PSC saying done",
        "type": "amqp.publish_message",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "body": "$workflow.definition_workflow_019GJ7B6M8HJA1Vy8t7g7uouVHJ4lBhErcN.local.variable_workflow_019GJ7ESHPYHO3zOWhQXV6HW7PBMrtKPlmb$",
          "continue_on_failure": false,
          "delivery_mode": 1,
          "description": "Write to the queue PSC reads from that the workflow has completed along with the status and output variables",
          "display_name": "Publish AMQP Message to PSC saying done",
          "exchange_name": "$workflow.definition_workflow_019GJ7B6M8HJA1Vy8t7g7uouVHJ4lBhErcN.local.variable_workflow_019GJ7ESHPUFZ5xRKMqOlupEseiQwrAFao8$",
          "routing_key": "$workflow.definition_workflow_019GJ7B6M8HJA1Vy8t7g7uouVHJ4lBhErcN.local.variable_workflow_019GJ7ESHOU6I3rJG5hHI9g4PrhBOKgrBVN$",
          "runtime_user": {
            "override_target_runtime_user": false,
            "target_default": true
          },
          "skip_execution": false,
          "target": {
            "override_workflow_target": true,
            "target_id": ""
          }
        },
        "object_type": "definition_activity"
      }
    ],
    "categories": [
      "category_1BMfMXSnJMyt5Ihqi7rWJr5N8cf"
    ]
  },
  "table_types": {
    "tabletype_015ICF0I7NO0C6WGjQyRPrquxRAGOZZH89S": {
      "unique_name": "tabletype_015ICF0I7NO0C6WGjQyRPrquxRAGOZZH89S",
      "data_type": "datatype.tabletype",
      "display_name": "ActionIdsArray",
      "columns": [
        {
          "is_required": true,
          "name": "ActionId",
          "title": "ActionId",
          "type": "string"
        }
      ],
      "base_type": "datatype",
      "object_type": "tabletype"
    }
  },
  "subworkflows": [
    {
      "workflow": {
        "unique_name": "definition_workflow_019GJ7BW72PN41UOHCedQ4XyZAoOEIRIc0z",
        "name": "Check for output vars in workflow",
        "title": "Check for output vars in workflow",
        "type": "generic.workflow",
        "base_type": "workflow",
        "variables": [
          {
            "schema_id": "datatype.boolean",
            "properties": {
              "value": false,
              "scope": "output",
              "name": "destWorkflowHasOuputVariables",
              "type": "datatype.boolean",
              "is_required": false
            },
            "unique_name": "variable_workflow_019GJ7CCSJW6O46f6Vwn4LEeYBYcqRracEp",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "",
              "scope": "input",
              "name": "JSONResponse",
              "type": "datatype.string",
              "is_required": false
            },
            "unique_name": "variable_workflow_019GJ7CCSJMBK7Ug0mRRDhE3POMLfag2qn1",
            "object_type": "variable_workflow"
          }
        ],
        "properties": {
          "atomic": {
            "is_atomic": false
          },
          "delete_workflow_instance": false,
          "display_name": "Check for output vars in workflow",
          "favorite": true,
          "target": {
            "no_target": true
          }
        },
        "object_type": "definition_workflow",
        "actions": [
          {
            "unique_name": "definition_activity_019GJ7CNTIYEP2Qe1SYnPpGAYihw4hazE3n",
            "name": "Execute Python Script",
            "title": "Execute Python Script",
            "type": "python3.script",
            "base_type": "activity",
            "properties": {
              "action_timeout": 180,
              "continue_on_failure": false,
              "display_name": "Execute Python Script",
              "script": "import json\nimport sys\n\nj = sys.argv[1]\njsonObject = json.loads(j)\noutputVarExists = False\nif  \"variables\" in jsonObject:\n variables = jsonObject[\"variables\"]\n for i, val in enumerate(variables):\n  if \"properties\" in val:\n   if \"output\" == val[\"properties\"][\"scope\"]:\n    outputVarExists=True\n    break\nprint(str(outputVarExists).lower())",
              "script_arguments": [
                "$workflow.definition_workflow_019GJ7BW72PN41UOHCedQ4XyZAoOEIRIc0z.input.variable_workflow_019GJ7CCSJMBK7Ug0mRRDhE3POMLfag2qn1$"
              ]
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_019GJ7CXDLN017jPs23wIyPECzZrslztl3z",
            "name": "JSONPath Query",
            "title": "JSONPath Query",
            "type": "corejava.jsonpathquery",
            "base_type": "activity",
            "properties": {
              "action_timeout": 180,
              "continue_on_failure": false,
              "display_name": "JSONPath Query",
              "input_json": "$activity.definition_activity_019GJ7CNTIYEP2Qe1SYnPpGAYihw4hazE3n.output.response_body$",
              "jsonpath_queries": [
                {
                  "jsonpath_query": "$",
                  "jsonpath_query_name": "OpVarsExist",
                  "jsonpath_query_type": "boolean",
                  "zdate_type_format": ""
                }
              ]
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_019GJ7D89TLVB0SzVKJrXwOjqM6038xIhLg",
            "name": "Set Variables",
            "title": "Set Variables",
            "type": "core.set_multiple_variables",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": false,
              "display_name": "Set Variables",
              "variables_to_update": [
                {
                  "variable_to_update": "$workflow.definition_workflow_019GJ7BW72PN41UOHCedQ4XyZAoOEIRIc0z.output.variable_workflow_019GJ7CCSJW6O46f6Vwn4LEeYBYcqRracEp$",
                  "variable_value_new": "$activity.definition_activity_019GJ7CXDLN017jPs23wIyPECzZrslztl3z.output.jsonpath_queries.OpVarsExist$"
                }
              ]
            },
            "object_type": "definition_activity"
          }
        ],
        "categories": [
          "category_1BMfMXSnJMyt5Ihqi7rWJr5N8cf"
        ]
      }
    }
  ]
}